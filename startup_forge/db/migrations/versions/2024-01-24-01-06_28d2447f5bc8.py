"""empty message

Revision ID: 28d2447f5bc8
Revises: 
Create Date: 2024-01-24 01:06:41.175145

"""
import sqlalchemy as sa
from alembic import op
import fastapi_users_db_sqlalchemy

# revision identifiers, used by Alembic.
revision = "28d2447f5bc8"
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "mentor_mentee",
        sa.Column("mentor_id", sa.Uuid(), nullable=False),
        sa.Column("mentee_id", sa.Uuid(), nullable=False),
        sa.Column("start_date", sa.DateTime(timezone=True), nullable=False),
        sa.PrimaryKeyConstraint("mentor_id", "mentee_id"),
        sa.UniqueConstraint("mentor_id", "mentee_id"),
    )
    op.create_table(
        "user",
        sa.Column("id", fastapi_users_db_sqlalchemy.generics.GUID(), nullable=False),
        sa.Column("email", sa.String(length=320), nullable=False),
        sa.Column("hashed_password", sa.String(length=1024), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("is_superuser", sa.Boolean(), nullable=False),
        sa.Column("is_verified", sa.Boolean(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_user_email"), "user", ["email"], unique=True)
    op.create_table(
        "experience",
        sa.Column("user_id", sa.Uuid(), nullable=False),
        sa.Column("company_name", sa.String(), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("start_date", sa.Date(), nullable=False),
        sa.Column("end_date", sa.Date(), nullable=True),
        sa.Column(
            "industry",
            sa.Enum(
                "FINTECH",
                "AI",
                "ECOMMERCE",
                "HEALTHCARE",
                "EDTECH",
                "HEALTHTECH",
                "CYBERSECURITY",
                "LOGISTICS",
                "MUSIC_ENTERTAINMENT",
                "REAL_ESTATE",
                "SAAS",
                "CONSUMER",
                "BLOCKCHAIN",
                "DIGITAL_MEDIA",
                name="industry",
            ),
            nullable=False,
        ),
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "mentor_mentee_history",
        sa.Column("mentor_id", sa.Uuid(), nullable=False),
        sa.Column("mentee_id", sa.Uuid(), nullable=False),
        sa.Column("start_date", sa.DateTime(timezone=True), nullable=False),
        sa.Column("end_date", sa.DateTime(timezone=True), nullable=False),
        sa.Column("mentee_comment", sa.Text(), nullable=True),
        sa.Column("mentor_comment", sa.Text(), nullable=True),
        sa.Column(
            "triggered_by", sa.Enum("MENTOR", "MENTEE", name="role"), nullable=False
        ),
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["mentee_id"],
            ["user.id"],
        ),
        sa.ForeignKeyConstraint(
            ["mentor_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "profile",
        sa.Column("first_name", sa.String(length=150), nullable=False),
        sa.Column("last_name", sa.String(length=150), nullable=False),
        sa.Column("user_id", sa.Uuid(), nullable=False),
        sa.Column("role", sa.Enum("MENTOR", "MENTEE", name="role"), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("user_id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("profile")
    op.drop_table("mentor_mentee_history")
    op.drop_table("experience")
    op.drop_index(op.f("ix_user_email"), table_name="user")
    op.drop_table("user")
    op.drop_table("mentor_mentee")
    # ### end Alembic commands ###
